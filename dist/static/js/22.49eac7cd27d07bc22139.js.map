{"version":3,"sources":["webpack:///src/components/project/setting/dbConfig/DBEnvConnect.vue","webpack:///./src/components/project/setting/dbConfig/DBEnvConnect.vue?e932","webpack:///./src/components/project/setting/dbConfig/DBEnvConnect.vue"],"names":["DBEnvConnect","name","data","dbConfigName","listLoading","statusChangeLoading","selects","testEnvs","dbConfig","dbType","dbEnvConnects","testEnvId","testEnvName","dbHost","dbPort","dbUser","dbPassword","dbName","formVisible","loading","formRules","required","message","trigger","min","max","type","form","methods","selectsChange","this","reportRowStyle","_ref","row","rowIndex","status","ReportTableRow","_ref2","getTestEnvList","_this","params","projectId","$route","project_id","Object","testEnv","then","res","rows","$message","error","center","catch","getDBConfigInfo","_this2","db_config_id","getDBEnvConnects","_this3","_loop","i","env","dbEnvConnect","dbConfigId","Content-Type","push","handleEdit","index","assign_default","submit","_this4","self","$refs","validate","valid","$confirm","trim","lastUpdateUser","$store","getters","email","createUser","resetFields","watch","handler","val","oldVal","deep","created","dbConfig_DBEnvConnect","render","_vm","_h","$createElement","_c","_self","staticClass","_v","_s","meta","title","_e","staticStyle","padding-bottom","attrs","span","inline","nativeOn","$event","preventDefault","text-decoration","color","to","on","click","$router","back","margin-right","directives","rawName","value","expression","width","row-style","row-class-name","highlight-current-row","selection-change","min-width","prop","label","show-overflow-tooltip","scopedSlots","_u","key","fn","scope","size","$index","left","visible","close-on-click-modal","update:visible","ref","model","rules","label-width","disabled","callback","$$v","$set","placeholder","auto-complete","_n","slot","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/22.49eac7cd27d07bc22139.js","sourcesContent":["<template>\n  <section>\n    <!--页面title-->\n    <strong class=\"title\">{{$route.meta.title}} <span v-if=\"dbConfig.name\"> - DB: {{dbConfig.name}}</span> </strong>\n    <!--工具条-->\n    <el-col :span=\"24\" class=\"toolbar\" style=\"padding-bottom: 0px\">\n      <el-form :inline=\"true\" @submit.native.prevent>\n        <router-link to=\"\" style=\"text-decoration: none;color: aliceblue;\">\n          <el-button class=\"return-list\" @click=\"$router.back(-1)\">\n            <i class=\"el-icon-d-arrow-left\" style=\"margin-right: 5px\"></i>返回\n          </el-button>\n        </router-link>\n      </el-form>\n    </el-col>\n\n    <!--DB列表-->\n    <el-table :data=\"dbEnvConnects\" :row-style=\"reportRowStyle\" :row-class-name=\"ReportTableRow\"\n              highlight-current-row v-loading=\"listLoading\" @selection-change=\"selectsChange\" style=\"width: 100%;\">\n      <el-table-column type=\"selection\" min-width=\"5%\">\n      </el-table-column>\n      <el-table-column prop=\"testEnvName\" label=\"环境名称\" min-width=\"15%\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column prop=\"dbType\" label=\"DB Type\" min-width=\"20%\" show-overflow-tooltip>\n        <template slot-scope=\"scope\">\n          <span v-if=\"dbConfig.dbType\">{{dbConfig.dbType}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"dbHost\" label=\"DB Host\" min-width=\"20%\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column prop=\"dbPort\" label=\"DB Port\" min-width=\"20%\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column prop=\"dbUser\" label=\"DB User\" min-width=\"20%\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column prop=\"dbPassword\" label=\"DB Password\" min-width=\"20%\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column prop=\"dbName\" label=\"Database Name\" min-width=\"20%\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column label=\"操作\" min-width=\"30%\">\n        <template slot-scope=\"scope\">\n          <el-button type=\"primary\" size=\"small\" @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!--编辑界面-->\n    <el-dialog title=\"配置连接信息\" :visible.sync=\"formVisible\"\n               :close-on-click-modal=\"false\"\n               style=\"width: 60%; left: 20%\">\n      <el-form :model=\"form\" :rules=\"formRules\" ref=\"form\" label-width=\"100px\">\n        <el-form-item label=\"环境名称\" prop=\"testEnvName\">\n          <el-input v-model=\"form.testEnvName\" disabled></el-input>\n        </el-form-item>\n        <el-form-item label=\"DB Type\" prop=\"dbType\">\n          <el-input v-model=\"form.dbType\" disabled></el-input>\n        </el-form-item>\n        <el-form-item label=\"DB Host\" prop='dbHost'>\n          <el-input placeholder=\"请输入DB Host\" v-model=\"form.dbHost\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"DB Port\" prop='dbPort'>\n          <el-input placeholder=\"请输入DB Port\" v-model.number=\"form.dbPort\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"DB User\" prop='dbUser'>\n          <el-input placeholder=\"请输入DB Username,可能为空\" v-model=\"form.dbUser\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"DB Password\" prop='dbPassword'>\n          <el-input placeholder=\"请输入DB Password,可能为空\" v-model=\"form.dbPassword\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"DB Name\" prop='dbName'>\n          <el-input placeholder=\"请输入DB Name\" v-model=\"form.dbName\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native=\"formVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click.native=\"submit\" :loading=\"loading\">提交</el-button>\n      </div>\n    </el-dialog>\n  </section>\n</template>\n\n<script>\n    import {getTestEnvs} from \"../../../../api/testEnv\";\n    import {getDBEnvConnect, getDBConfig, updateDBEnvConnect} from \"../../../../api/dbConfig\";\n\n    export default {\n        name: \"DBEnvConnect\",\n        data() {\n            return {\n                dbConfigName: \"\",\n                listLoading: false,\n                statusChangeLoading: false,\n                selects: [],//列表选中列\n                testEnvs: [],\n                dbConfig: {\n                    name: '',\n                    dbType: ''\n                },\n                dbEnvConnects: [{\n                    testEnvId: '',\n                    testEnvName: '',\n                    dbHost: '',\n                    dbPort: '',\n                    dbUser: '',\n                    dbPassword: '',\n                    dbName: ''\n                }],\n                formVisible: false,//dialog是否显示\n                loading: false,\n                formRules: {\n                    dbHost: [\n                        {required: true, message: '请输入Host', trigger: 'blur'},\n                        {min: 1, max: 50, message: '长度在 1 到 50 个字符', trigger: 'blur'}\n                    ],\n                    dbPort: [\n                        {required: true, message: '请输入Port', type: 'number', trigger: 'blur'}\n                    ],\n                    dbName: [\n                        {required: true, message: '请输入Database Name', trigger: 'blur'}\n                    ]\n                },\n                //编辑界面数据\n                form: {\n                    testEnvId: '',\n                    testEnvName: '',\n                    dbType: '',\n                    dbHost: '',\n                    dbPort: '',\n                    dbUser: '',\n                    dbPassword: '',\n                    dbName: ''\n                },\n            }\n        },\n        methods: {\n            selectsChange: function (selects) {\n                this.selects = selects;\n            },\n            // 修改table tr行的背景色\n            reportRowStyle({row, rowIndex}) {\n                if (!(row.status === true))\n                    return 'background-color: #FFF'\n                else {\n                    return ''\n                }\n            },\n            ReportTableRow({row, rowIndex}) {\n                return 'reportTableRow';\n            },\n            getTestEnvList() {\n                let header = {};\n                let params = {\n                    projectId: this.$route.params.project_id\n                }\n                getTestEnvs(this.$route.params.project_id, params, header).then((res) => {\n                    let {status, data} = res;\n                    if (status === 'ok') {\n                        this.testEnvs = data.rows\n                    } else {\n                        this.$message.error({\n                            message: data,\n                            center: true,\n                        })\n                    }\n                    return data.rows\n                }).catch((error) => {\n                    this.$message.error({\n                        message: '环境列表获取失败，请稍后刷新重试哦~',\n                        center: true,\n                    });\n                });\n            },\n            getDBConfigInfo() {\n                getDBConfig(this.$route.params.project_id, this.$route.params.db_config_id).then((res) => {\n                    let {status, data} = res;\n                    if (status === 'ok') {\n                        this.dbConfig = data\n                    } else {\n                        this.$message.error({\n                            message: data,\n                            center: true,\n                        })\n                    }\n                }).catch((error) => {\n                    this.$message.error({\n                        message: 'DB Config获取失败，请稍后刷新重试哦~',\n                        center: true,\n                    });\n                });\n            },\n            getDBEnvConnects() {\n                let testEnvs = this.testEnvs;\n                this.dbEnvConnects = [];\n                for (let i in testEnvs) {\n                    let env = testEnvs[i];\n                    let dbEnvConnect = {}\n                    dbEnvConnect['testEnvId'] = env['_id'];\n                    dbEnvConnect['testEnvName'] = env['name'];\n                    let header = {\n                        'Content-Type': 'application/json'\n                    }\n                    let params = {\n                        testEnvId: env['_id'],\n                        dbConfigId: this.$route.params.db_config_id\n                    }\n                    getDBEnvConnect(this.$route.params.project_id, params, header).then((res) => {\n                        let {status, data} = res;\n                        if (status === 'ok') {\n                            if (data['dbHost']) {\n                                dbEnvConnect['dbHost'] = data['dbHost'];\n                                dbEnvConnect['dbPort'] = data['dbPort'];\n                                dbEnvConnect['dbUser'] = data['dbUser'];\n                                dbEnvConnect['dbPassword'] = data['dbPassword'];\n                                dbEnvConnect['dbName'] = data['dbName'];\n                            }\n                        } else {\n                            this.$message.error({\n                                message: data,\n                                center: true,\n                            })\n                        }\n                    }).catch((error) => {\n                        this.$message.error({\n                            message: 'DB连接获取失败，请稍后刷新重试哦~',\n                            center: true,\n                        });\n                    });\n                    this.dbEnvConnects.push(dbEnvConnect)\n                }\n            },\n            //显示编辑界面\n            handleEdit: function (index, row) {\n                this.formVisible = true;\n                this.form = Object.assign({}, this.form, row);\n                this.form.dbType = this.dbConfig.dbType;\n            },\n            //提交修改\n            submit: function () {\n                let self = this;\n                this.$refs.form.validate((valid) => {\n                    if (valid) {\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            self.loading = true;\n                            let headers = {\n                                \"Content-Type\": \"application/json\",\n                            };\n                            let params = {\n                                dbConfigId: this.$route.params.db_config_id,\n                                testEnvId: self.form.testEnvId,\n                                dbType: self.form.dbType.trim(),\n                                dbHost: self.form.dbHost.trim(),\n                                dbPort: self.form.dbPort,\n                                dbName: self.form.dbName.trim(),\n                                lastUpdateUser: this.$store.getters.email || 'anonymous',\n                                createUser: this.$store.getters.email || 'anonymous'\n                            };\n                            if (self.form.dbUser && self.form.dbPassword) {\n                                params['dbUser'] = self.form.dbUser.trim();\n                                params['dbPassword'] = self.form.dbPassword.trim();\n                            }\n                            updateDBEnvConnect(this.$route.params.project_id, params, headers).then(res => {\n                                let {status, data} = res;\n                                self.loading = false;\n                                if (status === 'ok') {\n                                    self.$message({\n                                        message: '修改成功',\n                                        center: true,\n                                        type: 'success'\n                                    });\n                                    self.$refs['form'].resetFields();\n                                    self.formVisible = false;\n                                    self.getDBEnvConnects()\n                                } else {\n                                    self.$message.error({\n                                        message: data,\n                                        center: true,\n                                    })\n                                    self.getDBEnvConnects()\n                                }\n                            });\n                        });\n                    }\n                });\n            },\n        },\n        watch: {\n            testEnvs: {//深度监听，可监听到对象、数组的变化\n                handler(val, oldVal) {\n                    this.getDBEnvConnects()\n                },\n                deep: true\n            }\n        },\n        created() {\n            this.getTestEnvList();\n            this.getDBConfigInfo();\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n  .title {\n    float: left;\n    color: #475669;\n    font-size: 25px;\n    margin: 10px 5px;\n    font-family: Arial;\n\n    span {\n      font-size: 20px;\n    }\n  }\n\n  .return-list {\n    margin-top: 0px;\n    margin-bottom: 10px;\n    margin-left: 20px;\n    border-radius: 25px;\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/project/setting/dbConfig/DBEnvConnect.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('strong',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.$route.meta.title)+\" \"),(_vm.dbConfig.name)?_c('span',[_vm._v(\" - DB: \"+_vm._s(_vm.dbConfig.name))]):_vm._e()]),_vm._v(\" \"),_c('el-col',{staticClass:\"toolbar\",staticStyle:{\"padding-bottom\":\"0px\"},attrs:{\"span\":24}},[_c('el-form',{attrs:{\"inline\":true},nativeOn:{\"submit\":function($event){$event.preventDefault();}}},[_c('router-link',{staticStyle:{\"text-decoration\":\"none\",\"color\":\"aliceblue\"},attrs:{\"to\":\"\"}},[_c('el-button',{staticClass:\"return-list\",on:{\"click\":function($event){return _vm.$router.back(-1)}}},[_c('i',{staticClass:\"el-icon-d-arrow-left\",staticStyle:{\"margin-right\":\"5px\"}}),_vm._v(\"返回\\n        \")])],1)],1)],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.listLoading),expression:\"listLoading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.dbEnvConnects,\"row-style\":_vm.reportRowStyle,\"row-class-name\":_vm.ReportTableRow,\"highlight-current-row\":\"\"},on:{\"selection-change\":_vm.selectsChange}},[_c('el-table-column',{attrs:{\"type\":\"selection\",\"min-width\":\"5%\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"testEnvName\",\"label\":\"环境名称\",\"min-width\":\"15%\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"dbType\",\"label\":\"DB Type\",\"min-width\":\"20%\",\"show-overflow-tooltip\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(_vm.dbConfig.dbType)?_c('span',[_vm._v(_vm._s(_vm.dbConfig.dbType))]):_vm._e()]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"dbHost\",\"label\":\"DB Host\",\"min-width\":\"20%\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"dbPort\",\"label\":\"DB Port\",\"min-width\":\"20%\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"dbUser\",\"label\":\"DB User\",\"min-width\":\"20%\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"dbPassword\",\"label\":\"DB Password\",\"min-width\":\"20%\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"dbName\",\"label\":\"Database Name\",\"min-width\":\"20%\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\",\"min-width\":\"30%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.handleEdit(scope.$index, scope.row)}}},[_vm._v(\"编辑\")])]}}])})],1),_vm._v(\" \"),_c('el-dialog',{staticStyle:{\"width\":\"60%\",\"left\":\"20%\"},attrs:{\"title\":\"配置连接信息\",\"visible\":_vm.formVisible,\"close-on-click-modal\":false},on:{\"update:visible\":function($event){_vm.formVisible=$event}}},[_c('el-form',{ref:\"form\",attrs:{\"model\":_vm.form,\"rules\":_vm.formRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"环境名称\",\"prop\":\"testEnvName\"}},[_c('el-input',{attrs:{\"disabled\":\"\"},model:{value:(_vm.form.testEnvName),callback:function ($$v) {_vm.$set(_vm.form, \"testEnvName\", $$v)},expression:\"form.testEnvName\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"DB Type\",\"prop\":\"dbType\"}},[_c('el-input',{attrs:{\"disabled\":\"\"},model:{value:(_vm.form.dbType),callback:function ($$v) {_vm.$set(_vm.form, \"dbType\", $$v)},expression:\"form.dbType\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"DB Host\",\"prop\":\"dbHost\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入DB Host\",\"auto-complete\":\"off\"},model:{value:(_vm.form.dbHost),callback:function ($$v) {_vm.$set(_vm.form, \"dbHost\", $$v)},expression:\"form.dbHost\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"DB Port\",\"prop\":\"dbPort\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入DB Port\",\"auto-complete\":\"off\"},model:{value:(_vm.form.dbPort),callback:function ($$v) {_vm.$set(_vm.form, \"dbPort\", _vm._n($$v))},expression:\"form.dbPort\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"DB User\",\"prop\":\"dbUser\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入DB Username,可能为空\",\"auto-complete\":\"off\"},model:{value:(_vm.form.dbUser),callback:function ($$v) {_vm.$set(_vm.form, \"dbUser\", $$v)},expression:\"form.dbUser\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"DB Password\",\"prop\":\"dbPassword\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入DB Password,可能为空\",\"auto-complete\":\"off\"},model:{value:(_vm.form.dbPassword),callback:function ($$v) {_vm.$set(_vm.form, \"dbPassword\", $$v)},expression:\"form.dbPassword\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"DB Name\",\"prop\":\"dbName\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入DB Name\",\"auto-complete\":\"off\"},model:{value:(_vm.form.dbName),callback:function ($$v) {_vm.$set(_vm.form, \"dbName\", $$v)},expression:\"form.dbName\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){_vm.formVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.loading},nativeOn:{\"click\":function($event){return _vm.submit($event)}}},[_vm._v(\"提交\")])],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-099bf7a1\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/project/setting/dbConfig/DBEnvConnect.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-099bf7a1\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./DBEnvConnect.vue\")\n}\nvar normalizeComponent = require(\"!../../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./DBEnvConnect.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./DBEnvConnect.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-099bf7a1\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./DBEnvConnect.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-099bf7a1\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/project/setting/dbConfig/DBEnvConnect.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}