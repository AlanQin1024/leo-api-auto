{"version":3,"sources":["webpack:///./src/api/execution.js","webpack:///src/components/project/autoTest/TestSuiteList.vue","webpack:///./src/components/project/autoTest/TestSuiteList.vue?9c65","webpack:///./src/components/project/autoTest/TestSuiteList.vue"],"names":["__webpack_exports__","params","headers","request","url","method","data","__WEBPACK_IMPORTED_MODULE_0__utils_axios__","__webpack_require__","TestSuiteList","name","downloadLink","downloadName","testSuites","filters","pageInfoIndex","size","skip","sortBy","order","currentPage","totalNum","listLoading","copyLoading","importLoading","exportLoading","hasSelected","selects","delLoading","statusChangeLoading","testEnvs","testEnv","titleMap","add","edit","dialogStatus","formVisible","editLoading","formRules","required","message","trigger","min","max","description","priority","service","sprint","storyId","testCaseId","form","initForm","importExtraData","projectId","this","$route","project_id","user","$store","getters","email","methods","getTestSuiteList","queryTestSuites","self","trim","Object","testSuite","then","res","status","rows","$message","error","center","catch","handleSizeChange","val","handleCurrentChange","handleDel","index","row","_this","$confirm","type","_id","isDeleted","success","sortChange","column","prop","handleChangeStatus","_this2","Content-Type","selectsChange","length","handleEdit","assign_default","handleAdd","submit","_this3","$refs","validate","valid","loading","Authorization","JSON","parse","sessionStorage","getItem","createUser","resetFields","_params","lastUpdateUser","copySuite","reportRowStyle","_ref","rowIndex","ReportTableRow","_ref2","getTestEnvList","_this4","checkActiveTestEnv","warning","onTest","testSuiteIdList","map","item","testEnvId","executionUser","executionMode","execution","update","onBeforeUpload","file","fileSuffix","substring","lastIndexOf","onSuccessUpload","response","onProgressUpload","event","onErrorUpload","err","exportCases","_this5","asyncToGenerator_default","regenerator_default","a","mark","_callee","testSuiteIds","header","wrap","_context","prev","next","stringify_default","testCase","blob","Blob","window","URL","createObjectURL","moment_default","format","$nextTick","$el","querySelector","click","revokeObjectURL","console","log","stop","computed","getImportUrl","mounted","autoTest_TestSuiteList","render","_vm","_h","$createElement","_c","_self","staticClass","_v","_s","meta","title","staticStyle","padding-bottom","attrs","span","inline","model","nativeOn","$event","preventDefault","text-decoration","color","to","on","$router","back","margin-right","margin-left","effect","content","placement","action","before-upload","on-success","on-error","on-progress","show-file-list","with-credentials","disabled","float","placeholder","keyup","indexOf","_k","keyCode","key","value","callback","$$v","$set","expression","clearable","visible-change","_l","label","directives","rawName","width","row-style","row-class-name","highlight-current-row","sort-change","selection-change","min-width","sortable","show-overflow-tooltip","scopedSlots","_u","fn","scope","test_suite_id","showWarmPrompt","src","$index","page-sizes","page-size","layout","total","size-change","current-change","_e","left","visible","close-on-click-modal","update:visible","ref","rules","label-width","auto-complete","slot","href","download","staticRenderFns","Component","normalizeComponent","ssrContext"],"mappings":"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","file":"static/js/9.89d6a0fb915dc10db0eb.js","sourcesContent":["import request from '../utils/axios'\n\nexport function startAPITestByCase(params, headers) {\n  return request({\n    url: `/api/startAPITestByCase`,\n    method: 'POST',\n    headers: headers,\n    data: params\n  })\n}\n\nexport function startAPITestBySuite(params, headers) {\n  return request({\n    url: `/api/startAPITestBySuite`,\n    method: 'POST',\n    headers: headers,\n    data: params\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/execution.js","<template>\n  <section>\n    <!--页面title-->\n    <strong class=\"title\">{{$route.meta.title}}</strong>\n    <!--工具条-->\n    <el-col :span=\"24\" class=\"toolbar\" style=\"padding-bottom: 0px\">\n      <el-form :inline=\"true\" :model=\"filters\" @submit.native.prevent>\n        <router-link to=\"\" style=\"text-decoration: none; color: aliceblue;\">\n          <el-button class=\"return-list\" @click=\"$router.back(-1)\">\n            <i class=\"el-icon-d-arrow-left\" style=\"margin-right: 5px\"></i>返回\n          </el-button>\n        </router-link>\n        <el-form-item style=\"margin-left: 50px;\">\n          <el-button type=\"primary\" class=\"el-icon-plus\" @click=\"handleAdd\">新增用例组</el-button>\n        </el-form-item>\n        <!--        case import-->\n        <el-form-item style=\"margin-left: 10px\">\n          <el-tooltip class=\"item\" effect=\"dark\" content=\"只接收 xls / xlsx 哦~\" placement=\"top-start\">\n            <el-upload\n              :action=\"getImportUrl\"\n              :before-upload=\"onBeforeUpload\"\n              :on-success=\"onSuccessUpload\"\n              :on-error=\"onErrorUpload\"\n              :on-progress=\"onProgressUpload\"\n              :show-file-list=\"false\"\n              :with-credentials=\"true\"\n              :data=\"importExtraData\"\n            >\n              <el-button class=\"el-icon-upload2\" :disabled=\"importLoading\" type=\"primary\"\n                         style=\"margin-left: 5px\">用例导入\n              </el-button>\n            </el-upload>\n          </el-tooltip>\n        </el-form-item>\n        <el-form-item style=\"margin-left: 5px\">\n          <el-tooltip class=\"item\" effect=\"dark\" content=\"导出格式是 xlsx 哦~\" placement=\"top-start\">\n            <el-button class=\"el-icon-download\" :loading=\"exportLoading\" :disabled=\"!hasSelected\"\n                       type=\"primary\"\n                       style=\"margin-right: 3px\" @click=\"exportCases\"> 用例导出\n            </el-button>\n          </el-tooltip>\n        </el-form-item>\n\n        <div style=\"float: right; margin-right: 20px\">\n          <el-form-item>\n            <el-input v-model.trim=\"filters.name\" placeholder=\"名称\" @keyup.enter.native=\"getTestSuiteList\"></el-input>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" class=\"el-icon-search\" @click=\"getTestSuiteList\"> 查询</el-button>\n          </el-form-item>\n        </div>\n        <div style=\"float: right; margin-right: 30px\">\n          <el-select v-model=\"testEnv\" style=\"margin-right: 20px\" @visible-change='checkActiveTestEnv' clearable\n                     placeholder=\"测试环境\">\n            <el-option v-for=\"(item,index) in testEnvs\" :key=\"index+''\" :label=\"item.name\"\n                       :value=\"item._id\"></el-option>\n          </el-select>\n          <el-form-item>\n            <el-button type=\"primary\" class=\"el-icon-caret-right\" :disabled=\"!hasSelected\" @click=\"onTest\">执行测试\n            </el-button>\n          </el-form-item>\n        </div>\n      </el-form>\n    </el-col>\n    <!--用例组列表-->\n    <!--列表-->\n    <el-table @sort-change='sortChange' :data=\"testSuites\" :row-style=\"reportRowStyle\" :row-class-name=\"ReportTableRow\"\n              highlight-current-row v-loading=\"listLoading\" @selection-change=\"selectsChange\" style=\"width: 100%;\">\n      <el-table-column type=\"selection\" min-width=\"5%\">\n      </el-table-column>\n      <el-table-column sortable='custom' prop=\"name\" label=\"用例名称\" min-width=\"50%\" show-overflow-tooltip>\n        <template slot-scope=\"scope\">\n          <el-icon name=\"name\"></el-icon>\n          <router-link :to=\"{ name: 'TestCaseList', params: {\n                        test_suite_id: scope.row._id,\n                        showWarmPrompt: true}}\" style='text-decoration: none;'>\n            {{ scope.row.name }}\n          </router-link>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"description\" label=\"描述\" min-width=\"20%\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column prop=\"priority\" label=\"优先级\" min-width=\"10%\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column prop=\"service\" label=\"服务\" min-width=\"10%\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column prop=\"sprint\" label=\"Sprint\" min-width=\"10%\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column prop=\"storyId\" label=\"StoryID\" min-width=\"10%\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column prop=\"testCaseId\" label=\"TestCaseID\" min-width=\"10%\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column sortable='custom' prop=\"createAt\" label=\"创建时间\" min-width=\"15%\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column sortable='custom' prop=\"createUser\" label=\"创建者\" min-width=\"15%\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column prop=\"status\" label=\"状态\" min-width=\"10%\" sortable='custom'>\n        <template slot-scope=\"scope\">\n          <img v-show=\"scope.row.status\" src=\"../../../assets/imgs/icon-yes.svg\"/>\n          <img v-show=\"!scope.row.status\" src=\"../../../assets/imgs/icon-no.svg\"/>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" min-width=\"40%\">\n        <template slot-scope=\"scope\">\n          <el-button type=\"primary\" size=\"small\" @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\n          <el-button class=\"copyBtn\" size=\"small\" :loading=\"copyLoading\" @click=\"copySuite(scope.$index, scope.row)\">复制\n          </el-button>\n          <el-button type=\"info\" size=\"small\" :loading=\"statusChangeLoading\"\n                     @click=\"handleChangeStatus(scope.$index, scope.row)\">\n            {{scope.row.status===false?'启用':'禁用'}}\n          </el-button>\n          <el-button type=\"danger\" size=\"small\" @click=\"handleDel(scope.$index, scope.row)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!--翻页工具条-->\n    <el-col :span=\"24\" class=\"toolbar\">\n      <el-pagination\n        style=\"float: right\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        v-if=\"totalNum != 0\"\n        :page-sizes=\"[10, 20, 40]\"\n        :page-size=\"size\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"totalNum\">\n      </el-pagination>\n    </el-col>\n\n    <el-dialog :title=\"titleMap[dialogStatus]\" :visible.sync=\"formVisible\" :close-on-click-modal=\"false\"\n               style=\"width: 65%; left: 17.5%\">\n      <el-form :model=\"form\" :rules=\"formRules\" ref=\"form\" label-width=\"80px\">\n        <el-form-item label=\"名称\" prop=\"name\">\n          <el-input v-model=\"form.name\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"描述\" prop='description'>\n          <el-input type=\"textarea\" :rows=\"4\" v-model=\"form.description\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"优先级\" prop=\"priority\">\n          <el-input v-model.trim=\"form.priority\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"所属服务\" prop=\"service\">\n          <el-input v-model.trim=\"form.service\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Sprint\" prop=\"sprint\">\n          <el-input v-model.trim=\"form.sprint\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"storyId\" prop=\"storyId\">\n          <el-input v-model.trim=\"form.storyId\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"testCaseId\" prop=\"testCaseId\">\n          <el-input v-model.trim=\"form.testCaseId\" auto-complete=\"off\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native=\"formVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click.native=\"submit\" :loading=\"editLoading\">提交</el-button>\n      </div>\n    </el-dialog>\n\n    <!--    for export case download-->\n    <a class=\"js-download-doc\" :href=\"downloadLink\" :download=\"downloadName\" v-show=\"false\"/>\n  </section>\n</template>\n\n<script>\n    import {addTestSuite, copyTestSuite, getTestSuites, updateTestSuite} from \"../../../api/testSuite\";\n    import {getTestEnvs} from \"../../../api/testEnv\";\n    import {startAPITestBySuite} from \"../../../api/execution\";\n    import {exportTestCases} from '../../../api/testCase';\n    import moment from \"moment\";\n\n    export default {\n        name: \"TestSuiteList\",\n        data() {\n            return {\n                downloadLink: '',\n                downloadName: '',\n                testSuites: [],\n                filters: {\n                    name: \"\"\n                },\n                pageInfoIndex: -1,\n                size: 10,\n                skip: 0,\n                sortBy: 'createAt',\n                order: 'descending',\n                currentPage: 1,\n                totalNum: 0,\n                listLoading: false,\n                copyLoading: false,\n                importLoading: false,\n                exportLoading: false,\n                hasSelected: false,\n                selects: [],//列表选中列\n                delLoading: false,\n                statusChangeLoading: false,\n                testEnvs: [],\n                testEnv: '',\n                titleMap: {\n                    add: '新增',\n                    edit: '编辑'\n                },\n                dialogStatus: '',\n                formVisible: false,//编辑界面是否显示\n                editLoading: false,\n                formRules: {\n                    name: [\n                        {required: true, message: '请输入名称', trigger: 'blur'},\n                        {min: 1, max: 100, message: '长度在 1 到 100 个字符', trigger: 'blur'}\n                    ],\n                    description: [\n                        {required: false, message: '请输入描述', trigger: 'blur'},\n                        {max: 1024, message: '不能超过1024个字符', trigger: 'blur'}\n                    ],\n                    priority: [\n                        {required: false, message: '请输入优先级，P1 or P2', trigger: 'blur'},\n                        {min: 2, max: 2, message: '请输入 P1 or P2', trigger: 'blur'}\n                    ],\n                    service: [\n                        {required: false, message: '请输入服务', trigger: 'blur'},\n                        {max: 30, message: '所属服务', trigger: 'blur'}\n                    ],\n                    sprint: [\n                        {required: false, message: '请输入Sprint', trigger: 'blur'},\n                        {max: 30, message: '用例所属Sprint，30字符以内', trigger: 'blur'}\n                    ],\n                    storyId: [\n                        {required: false, message: '请输入Story ID', trigger: 'blur'},\n                        {max: 30, message: '用例story ID，30字符以内', trigger: 'blur'}\n                    ],\n                    testCaseId: [\n                        {required: false, message: '请输入Test Case ID', trigger: 'blur'},\n                        {max: 30, message: '用例Test Case ID，30字符以内', trigger: 'blur'}\n                    ]\n                },\n                //编辑界面数据\n                form: {\n                    name: '',\n                    description: ''\n                },\n                initForm: {\n                    name: '',\n                    description: ''\n                },\n\n                // For import cases.\n                importExtraData: {\n                    projectId: this.$route.params.project_id,\n                    user: this.$store.getters.email || '未知anonymous'\n                }\n            }\n        },\n        methods: {\n            // 获取用例组列表\n            getTestSuiteList() {\n                let self = this;\n                let params = {\n                    skip: self.skip, size: self.size, sortBy: self.sortBy, order: self.order,\n                    projectId: self.$route.params.project_id\n                }\n                this.queryTestSuites(params);\n            },\n            queryTestSuites(params) {\n                this.listLoading = true;\n                let self = this;\n                if (self.filters.name.trim() !== '') {\n                    params['name'] = self.filters.name.trim()\n                }\n                ;\n                let header = {};\n                getTestSuites(self.$route.params.project_id, params, header).then((res) => {\n                    self.listLoading = false;\n                    let {status, data} = res;\n                    if (status === 'ok') {\n                        self.testSuites = data.rows;\n                        self.totalNum = data.totalNum;\n                    } else {\n                        self.$message.error({\n                            message: data,\n                            center: true,\n                        })\n                    }\n                }).catch((error) => {\n                    self.$message.error({\n                        message: '用例列表获取失败，请稍后刷新重试哦~',\n                        center: true,\n                    });\n                    self.listLoading = false;\n                })\n            },\n            handleSizeChange(val) {\n                let self = this;\n                let params = {\n                    skip: self.skip, size: self.size, sortBy: self.sortBy, order: self.order,\n                    projectId: self.$route.params.project_id\n                };\n                this.queryTestSuites(params);\n            },\n            handleCurrentChange(val) {\n                let self = this;\n                let params = {\n                    skip: self.skip, size: self.size, sortBy: self.sortBy, order: self.order,\n                    projectId: self.$route.params.project_id\n                };\n                this.queryTestSuites(params);\n            },\n            //删除\n            handleDel: function (index, row) {\n                this.$confirm('确认删除该记录吗?', '提示', {\n                    type: 'warning'\n                }).then((res) => {\n                    this.editLoading = true;\n                    //NProgress.start();\n                    let self = this;\n                    let header = {};\n                    let params = {\"isDeleted\": true}\n                    updateTestSuite(self.$route.params.project_id, row._id, params, header).then((res) => {\n                        self.editLoading = false;\n                        let {status, data} = res;\n                        if (status === 'ok') {\n                            self.$message.success({\n                                message: '删除成功',\n                                center: true,\n                            });\n                            self.getTestSuiteList();\n                        } else {\n                            self.$message.error({\n                                message: data,\n                                center: true,\n                            })\n                            self.getTestSuiteList()\n                        }\n                    }).catch(() => {\n                        self.$message.error({\n                            message: '删除用例失败,请稍后重试哦',\n                            center: true\n                        })\n                        self.editLoading = false;\n                    });\n                })\n            },\n            //排序\n            sortChange(column) {\n                let self = this;\n                self.sortBy = column.prop;\n                self.order = column.order;\n                let params = {\n                    skip: self.skip, size: self.size, sortBy: self.sortBy, order: self.order,\n                    projectId: self.$route.params.project_id\n                };\n                this.queryTestSuites(params);\n            },\n            handleChangeStatus: function (index, row) {\n                let self = this;\n                self.statusChangeLoading = true;\n                let status = !row.status;\n                let params = {\n                    'status': status\n                };\n                let headers = {\n                    \"Content-Type\": \"application/json\",\n                };\n                updateTestSuite(this.$route.params.project_id, row._id, params, headers).then(res => {\n                    let {status, data} = res;\n                    self.statusChangeLoading = false;\n                    if (status === 'ok') {\n                        self.$message({\n                            message: '状态变更成功',\n                            center: true,\n                            type: 'success'\n                        });\n                        row.status = !row.status;\n                    } else {\n                        self.$message.error({\n                            message: data,\n                            center: true,\n                        })\n                    }\n                    self.getTestSuiteList()\n                }).catch(() => {\n                    self.$message.error({\n                        message: '用例组状态更新失败,请稍后重试哦',\n                        center: true\n                    })\n                    self.statusChangeLoading = false;\n                    this.getTestSuiteList()\n                });\n            },\n            selectsChange: function (selects) {\n                if (selects.length > 0) {\n                    this.selects = selects;\n                    this.hasSelected = true\n                } else {\n                    this.hasSelected = false\n                }\n            },\n            //显示编辑界面\n            handleEdit: function (index, row) {\n                this.formVisible = true;\n                this.form = Object.assign({}, this.form, row);\n                this.dialogStatus = 'edit';\n            },\n            //显示新增界面\n            handleAdd: function () {\n                this.formVisible = true;\n                this.form = Object.assign({}, this.form, this.initForm);\n                this.dialogStatus = 'add';\n            },\n            //提交修改\n            submit: function () {\n                let self = this;\n                this.$refs.form.validate((valid) => {\n                    if (valid) {\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            self.loading = true;\n                            //NProgress.start();\n                            let headers = {\n                                \"Content-Type\": \"application/json\",\n                                Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n                            };\n                            if (this.dialogStatus == 'add') {\n                                let params = {\n                                    name: self.form.name.trim(),\n                                    priority: self.form.priority,\n                                    service: self.form.service,\n                                    sprint: self.form.sprint,\n                                    storyId: self.form.storyId,\n                                    testCaseId: self.form.testCaseId,\n                                    createUser: self.$store.getters.email || '未知anonymous'\n                                };\n                                if (self.form.description) {\n                                    params['description'] = self.form.description.trim();\n                                }\n                                addTestSuite(this.$route.params.project_id, params, headers).then((res) => {\n                                    let {status, data} = res;\n                                    self.loading = false;\n                                    if (status === 'ok') {\n                                        self.$message({\n                                            message: '添加成功',\n                                            center: true,\n                                            type: 'success'\n                                        });\n                                        self.$refs['form'].resetFields();\n                                        self.formVisible = false;\n                                        self.getTestSuiteList()\n                                    } else {\n                                        self.$message.error({\n                                            message: data,\n                                            center: true,\n                                        });\n                                        self.$refs['form'].resetFields();\n                                        self.formVisible = false;\n                                        self.getTestSuiteList()\n                                    }\n                                })\n                            } else if (this.dialogStatus == 'edit') {\n                                let params = {\n                                    project_id: this.$route.params.project_id,\n                                    name: self.form.name.trim(),\n                                    priority: self.form.priority.trim(),\n                                    service: self.form.service,\n                                    sprint: self.form.sprint,\n                                    storyId: self.form.storyId,\n                                    testCaseId: self.form.testCaseId,\n                                    description: self.form.description.trim(),\n                                    lastUpdateUser: self.$store.getters.email || '未知anonymous'\n                                };\n                                updateTestSuite(this.$route.params.project_id, self.form._id, params, headers).then(res => {\n                                    let {status, data} = res;\n                                    self.loading = false;\n                                    if (status === 'ok') {\n                                        self.$message({\n                                            message: '修改成功',\n                                            center: true,\n                                            type: 'success'\n                                        });\n                                        self.$refs['form'].resetFields();\n                                        self.formVisible = false;\n                                        self.getTestSuiteList()\n                                    } else {\n                                        self.$message.error({\n                                            message: data,\n                                            center: true,\n                                        })\n                                        self.getTestSuiteList()\n                                    }\n                                })\n                            } else {\n                                self.$message.error({\n                                    message: \"系统出错\",\n                                    center: true,\n                                });\n                                self.getTestSuiteList()\n                            }\n                        });\n                    }\n                });\n            },\n            copySuite(index, row) {\n                let self = this;\n                this.$confirm('确认复制吗？', '提示', {}).then(() => {\n                    self.copyLoading = true;\n                    let header = {\"Content-Type\": \"application/json\"};\n                    let params = {\n                        createUser: self.$store.getters.email || '未知anonymous'\n                    };\n                    copyTestSuite(self.$route.params.project_id, row._id, params, header).then((res) => {\n                        self.copyLoading = false;\n                        let {status, data} = res;\n                        if (status === 'ok') {\n                            self.$message.success({\n                                message: data,\n                                center: true,\n                            })\n                        } else {\n                            self.$message.error({\n                                message: data,\n                                center: true,\n                            })\n                        }\n                        self.getTestSuiteList()\n                    }).catch((error) => {\n                        self.$message.error({\n                            message: '用例组复制失败，请稍后重试哦~',\n                            center: true,\n                        });\n                        self.copyLoading = false;\n                    })\n                });\n            },\n            // 修改table tr行的背景色\n            reportRowStyle({row, rowIndex}) {\n                if (!(row.status === true))\n                    return 'background-color: #DDDDDD'\n                else {\n                    return ''\n                }\n            },\n            ReportTableRow({row, rowIndex}) {\n                return 'reportTableRow';\n            },\n            getTestEnvList() {\n                let self = this;\n                let header = {};\n                let params = {status: true, projectId: self.$route.params.project_id};\n                getTestEnvs(self.$route.params.project_id, params, header).then((res) => {\n                    let {status, data} = res\n                    if (status === 'ok') {\n                        this.testEnvs = data.rows\n                    } else {\n                        self.$message.error({\n                            message: data,\n                            center: true,\n                        })\n                    }\n                }).catch((error) => {\n                    self.$message.error({\n                        message: '暂时无法获取环境列表，请稍后刷新重试~',\n                        center: true,\n                    });\n                })\n            },\n            checkActiveTestEnv: function () {\n                let self = this;\n                if (self.testEnvs.length < 1) {\n                    self.$message.warning({\n                        message: '未找到「启用的测试环境」哦, 请前往「环境配置」进行设置',\n                        center: true,\n                    })\n                }\n            },\n            onTest() {\n                let self = this;\n                if (self.testEnv) {\n                    self.listLoading = true;\n                    let suiteIds = self.selects.map(item => item._id);\n                    let headers = {\n                        \"Content-Type\": \"application/json\",\n                    };\n                    let params = {\n                        testSuiteIdList: suiteIds,\n                        testEnvId: self.testEnv,\n                        projectId: self.$route.params.project_id,\n                        executionUser: self.$store.getters.email,\n                        executionMode: 'manual'\n                    };\n                    startAPITestBySuite(params, headers).then((res) => {\n                        self.listLoading = false;\n                        let {status, data} = res;\n                        if (status === 'ok') {\n                            self.$message.success({\n                                message: data,\n                                center: true,\n                            });\n                        } else {\n                            self.$message.warning({\n                                message: data,\n                                center: true\n                            });\n                        }\n                        self.getTestSuiteList();\n                    }).catch((error) => {\n                        self.$message.error({\n                            message: '用例执行异常/超时，请稍后重试哦~',\n                            center: true,\n                        });\n                        self.listLoading = false;\n                        self.update = false;\n                    })\n                } else {\n                    this.$message({\n                        message: '请选择「测试环境」, 在「执行测试」按钮右边哦~',\n                        center: true,\n                        type: 'warning'\n                    })\n                }\n            },\n\n            // For Import Test Cases\n            onBeforeUpload(file) {\n                let fileSuffix = file.name.substring(file.name.lastIndexOf(\".\") + 1)\n                if (fileSuffix === 'xls' || fileSuffix === 'xlsx') {\n                    return file\n                } else {\n                    this.$message.warning('只接收 .xls / .xlsx 文件哦 ~ ')\n                    return false\n                }\n            },\n            onSuccessUpload(response) {\n                let {status, data} = response\n                if (status === 'ok') {\n                    this.$message.success(data)\n                } else {\n                    this.$message.error(data)\n                }\n                this.getTestSuiteList()\n                this.importLoading = false\n            },\n            onProgressUpload(event) {\n                this.importLoading = true\n            },\n            onErrorUpload(err) {\n                this.importLoading = false\n                this.$message.error(err)\n            },\n\n            // For Export Test Case\n            async exportCases() {\n                let self = this;\n                self.exportLoading = true;\n                let testSuiteIds = self.selects.map(item => item._id);\n                let header = {\n                    \"Content-Type\": \"application/json\"\n                };\n                let params = JSON.stringify({\n                    \"testSuiteIds\": testSuiteIds\n                });\n                exportTestCases(params, header).then((res) => {\n                    const blob = new Blob([res])\n                    self.downloadLink = window.URL.createObjectURL(blob)\n                    self.downloadName = `测试用例_${moment().format('YYYY-MM-DD_HH-mm-ss')}.xlsx`\n                    self.$nextTick(() => {\n                        self.$el.querySelector('.js-download-doc').click()\n                        window.URL.revokeObjectURL(this.downloadLink)\n                        self.exportLoading = false;\n                        self.$message.success({\n                            message: '用例导出成功',\n                            center: true,\n                        });\n                    })\n                }).catch((error) => {\n                    console.log(\"Export Cases error:\", error)\n                    self.$message.error({\n                        message: '用例导出失败，请稍后重试哦~',\n                        center: true,\n                    });\n                    self.exportLoading = false;\n                })\n            },\n        },\n        computed: {\n            getImportUrl() {\n                return `${process.env.CASE_IMPORT_URI}`\n            }\n        },\n        mounted() {\n            this.getTestEnvList();\n            this.getTestSuiteList();\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n  .title {\n    width: 200px;\n    float: left;\n    color: #475669;\n    font-size: 25px;\n    margin: 10px 5px;\n    font-family: Arial;\n  }\n\n  .return-list {\n    margin-top: 0px;\n    margin-bottom: 10px;\n    margin-left: 20px;\n    border-radius: 25px;\n  }\n\n  .copyBtn {\n    color: #fff;\n    background-color: #33CC00;\n    border-color: #33CC00;\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/project/autoTest/TestSuiteList.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('strong',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.$route.meta.title))]),_vm._v(\" \"),_c('el-col',{staticClass:\"toolbar\",staticStyle:{\"padding-bottom\":\"0px\"},attrs:{\"span\":24}},[_c('el-form',{attrs:{\"inline\":true,\"model\":_vm.filters},nativeOn:{\"submit\":function($event){$event.preventDefault();}}},[_c('router-link',{staticStyle:{\"text-decoration\":\"none\",\"color\":\"aliceblue\"},attrs:{\"to\":\"\"}},[_c('el-button',{staticClass:\"return-list\",on:{\"click\":function($event){return _vm.$router.back(-1)}}},[_c('i',{staticClass:\"el-icon-d-arrow-left\",staticStyle:{\"margin-right\":\"5px\"}}),_vm._v(\"返回\\n        \")])],1),_vm._v(\" \"),_c('el-form-item',{staticStyle:{\"margin-left\":\"50px\"}},[_c('el-button',{staticClass:\"el-icon-plus\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.handleAdd}},[_vm._v(\"新增用例组\")])],1),_vm._v(\" \"),_c('el-form-item',{staticStyle:{\"margin-left\":\"10px\"}},[_c('el-tooltip',{staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":\"只接收 xls / xlsx 哦~\",\"placement\":\"top-start\"}},[_c('el-upload',{attrs:{\"action\":_vm.getImportUrl,\"before-upload\":_vm.onBeforeUpload,\"on-success\":_vm.onSuccessUpload,\"on-error\":_vm.onErrorUpload,\"on-progress\":_vm.onProgressUpload,\"show-file-list\":false,\"with-credentials\":true,\"data\":_vm.importExtraData}},[_c('el-button',{staticClass:\"el-icon-upload2\",staticStyle:{\"margin-left\":\"5px\"},attrs:{\"disabled\":_vm.importLoading,\"type\":\"primary\"}},[_vm._v(\"用例导入\\n            \")])],1)],1)],1),_vm._v(\" \"),_c('el-form-item',{staticStyle:{\"margin-left\":\"5px\"}},[_c('el-tooltip',{staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":\"导出格式是 xlsx 哦~\",\"placement\":\"top-start\"}},[_c('el-button',{staticClass:\"el-icon-download\",staticStyle:{\"margin-right\":\"3px\"},attrs:{\"loading\":_vm.exportLoading,\"disabled\":!_vm.hasSelected,\"type\":\"primary\"},on:{\"click\":_vm.exportCases}},[_vm._v(\" 用例导出\\n          \")])],1)],1),_vm._v(\" \"),_c('div',{staticStyle:{\"float\":\"right\",\"margin-right\":\"20px\"}},[_c('el-form-item',[_c('el-input',{attrs:{\"placeholder\":\"名称\"},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.getTestSuiteList($event)}},model:{value:(_vm.filters.name),callback:function ($$v) {_vm.$set(_vm.filters, \"name\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"filters.name\"}})],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{staticClass:\"el-icon-search\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.getTestSuiteList}},[_vm._v(\" 查询\")])],1)],1),_vm._v(\" \"),_c('div',{staticStyle:{\"float\":\"right\",\"margin-right\":\"30px\"}},[_c('el-select',{staticStyle:{\"margin-right\":\"20px\"},attrs:{\"clearable\":\"\",\"placeholder\":\"测试环境\"},on:{\"visible-change\":_vm.checkActiveTestEnv},model:{value:(_vm.testEnv),callback:function ($$v) {_vm.testEnv=$$v},expression:\"testEnv\"}},_vm._l((_vm.testEnvs),function(item,index){return _c('el-option',{key:index+'',attrs:{\"label\":item.name,\"value\":item._id}})}),1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{staticClass:\"el-icon-caret-right\",attrs:{\"type\":\"primary\",\"disabled\":!_vm.hasSelected},on:{\"click\":_vm.onTest}},[_vm._v(\"执行测试\\n          \")])],1)],1)],1)],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.listLoading),expression:\"listLoading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.testSuites,\"row-style\":_vm.reportRowStyle,\"row-class-name\":_vm.ReportTableRow,\"highlight-current-row\":\"\"},on:{\"sort-change\":_vm.sortChange,\"selection-change\":_vm.selectsChange}},[_c('el-table-column',{attrs:{\"type\":\"selection\",\"min-width\":\"5%\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"sortable\":\"custom\",\"prop\":\"name\",\"label\":\"用例名称\",\"min-width\":\"50%\",\"show-overflow-tooltip\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-icon',{attrs:{\"name\":\"name\"}}),_vm._v(\" \"),_c('router-link',{staticStyle:{\"text-decoration\":\"none\"},attrs:{\"to\":{ name: 'TestCaseList', params: {\n                      test_suite_id: scope.row._id,\n                      showWarmPrompt: true}}}},[_vm._v(\"\\n          \"+_vm._s(scope.row.name)+\"\\n        \")])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"description\",\"label\":\"描述\",\"min-width\":\"20%\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"priority\",\"label\":\"优先级\",\"min-width\":\"10%\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"service\",\"label\":\"服务\",\"min-width\":\"10%\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"sprint\",\"label\":\"Sprint\",\"min-width\":\"10%\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"storyId\",\"label\":\"StoryID\",\"min-width\":\"10%\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"testCaseId\",\"label\":\"TestCaseID\",\"min-width\":\"10%\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"sortable\":\"custom\",\"prop\":\"createAt\",\"label\":\"创建时间\",\"min-width\":\"15%\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"sortable\":\"custom\",\"prop\":\"createUser\",\"label\":\"创建者\",\"min-width\":\"15%\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"status\",\"label\":\"状态\",\"min-width\":\"10%\",\"sortable\":\"custom\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('img',{directives:[{name:\"show\",rawName:\"v-show\",value:(scope.row.status),expression:\"scope.row.status\"}],attrs:{\"src\":require(\"../../../assets/imgs/icon-yes.svg\")}}),_vm._v(\" \"),_c('img',{directives:[{name:\"show\",rawName:\"v-show\",value:(!scope.row.status),expression:\"!scope.row.status\"}],attrs:{\"src\":require(\"../../../assets/imgs/icon-no.svg\")}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\",\"min-width\":\"40%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.handleEdit(scope.$index, scope.row)}}},[_vm._v(\"编辑\")]),_vm._v(\" \"),_c('el-button',{staticClass:\"copyBtn\",attrs:{\"size\":\"small\",\"loading\":_vm.copyLoading},on:{\"click\":function($event){return _vm.copySuite(scope.$index, scope.row)}}},[_vm._v(\"复制\\n        \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"info\",\"size\":\"small\",\"loading\":_vm.statusChangeLoading},on:{\"click\":function($event){return _vm.handleChangeStatus(scope.$index, scope.row)}}},[_vm._v(\"\\n          \"+_vm._s(scope.row.status===false?'启用':'禁用')+\"\\n        \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.handleDel(scope.$index, scope.row)}}},[_vm._v(\"删除\")])]}}])})],1),_vm._v(\" \"),_c('el-col',{staticClass:\"toolbar\",attrs:{\"span\":24}},[(_vm.totalNum != 0)?_c('el-pagination',{staticStyle:{\"float\":\"right\"},attrs:{\"page-sizes\":[10, 20, 40],\"page-size\":_vm.size,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.totalNum},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}}):_vm._e()],1),_vm._v(\" \"),_c('el-dialog',{staticStyle:{\"width\":\"65%\",\"left\":\"17.5%\"},attrs:{\"title\":_vm.titleMap[_vm.dialogStatus],\"visible\":_vm.formVisible,\"close-on-click-modal\":false},on:{\"update:visible\":function($event){_vm.formVisible=$event}}},[_c('el-form',{ref:\"form\",attrs:{\"model\":_vm.form,\"rules\":_vm.formRules,\"label-width\":\"80px\"}},[_c('el-form-item',{attrs:{\"label\":\"名称\",\"prop\":\"name\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.form.name),callback:function ($$v) {_vm.$set(_vm.form, \"name\", $$v)},expression:\"form.name\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"描述\",\"prop\":\"description\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":4},model:{value:(_vm.form.description),callback:function ($$v) {_vm.$set(_vm.form, \"description\", $$v)},expression:\"form.description\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"优先级\",\"prop\":\"priority\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.form.priority),callback:function ($$v) {_vm.$set(_vm.form, \"priority\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"form.priority\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"所属服务\",\"prop\":\"service\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.form.service),callback:function ($$v) {_vm.$set(_vm.form, \"service\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"form.service\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"Sprint\",\"prop\":\"sprint\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.form.sprint),callback:function ($$v) {_vm.$set(_vm.form, \"sprint\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"form.sprint\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"storyId\",\"prop\":\"storyId\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.form.storyId),callback:function ($$v) {_vm.$set(_vm.form, \"storyId\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"form.storyId\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"testCaseId\",\"prop\":\"testCaseId\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.form.testCaseId),callback:function ($$v) {_vm.$set(_vm.form, \"testCaseId\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"form.testCaseId\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){_vm.formVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.editLoading},nativeOn:{\"click\":function($event){return _vm.submit($event)}}},[_vm._v(\"提交\")])],1)],1),_vm._v(\" \"),_c('a',{directives:[{name:\"show\",rawName:\"v-show\",value:(false),expression:\"false\"}],staticClass:\"js-download-doc\",attrs:{\"href\":_vm.downloadLink,\"download\":_vm.downloadName}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-20a648d8\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/project/autoTest/TestSuiteList.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-20a648d8\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!sass-resources-loader?{\\\"resources\\\":\\\"D:\\\\\\\\PycharmProjects\\\\\\\\leo-api-auto\\\\\\\\frontend\\\\\\\\element-variables.scss\\\"}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./TestSuiteList.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./TestSuiteList.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./TestSuiteList.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-20a648d8\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./TestSuiteList.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-20a648d8\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/project/autoTest/TestSuiteList.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}